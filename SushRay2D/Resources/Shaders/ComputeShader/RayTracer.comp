#version 430 core

#define PI 3.1415926535897932384626433832795

uniform int width;
uniform int height;

uniform int radius;

uniform vec2 startPos;

uniform sampler2D lightMapIn;	//texture0
layout(RGBA32F) uniform image2D lightMapOut;	//texture0

layout(local_size_x = 1, local_size_y = 1) in;


float angle = (float(2.0 * PI) / gl_NumWorkGroups.x) * gl_WorkGroupID.x;
float fallof = float(1.0) / radius;

vec2 rayPos = {0,0};
vec2 coord;
vec2 xyDelta;

vec4 outCol;

int r;

vec2 normPix;	//normalized pixel height(y) and width(x)


void main()
{
	coord = startPos;
	xyDelta.x = sin(angle);
	xyDelta.y = cos(angle);

	//calculate normalized Pixel height(y) an width(x)
	normPix.x = 1 / width;
	normPix.y = 1 / height;
	for(r = 0; r < radius; r++)
	{
		outCol = vec4(1, 1, 1, 1);
		imageStore(lightMapOut, ivec2(coord), outCol);
		coord += xyDelta;
		if(((coord.x < 0) || (coord.y < 0)) || ((coord.x > width) || (coord.y > height)))
		{
			r = radius;
			break;
		}
	}
}